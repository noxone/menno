<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>menno</artifactId>
        <groupId>org.olafneumann</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>menno-web</artifactId>
    <packaging>jar</packaging>

    <name>Menno UI</name>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-js</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-html-js</artifactId>
            <version>${kotlinx.html.version}</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>

        <plugins>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>${kotlin.version}</version>

                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>js</goal>
                        </goals>
                        <configuration>
                            <sourceMap>true
                            </sourceMap> <!-- source map is useful for debugging in tools that support source maps -->
                            <outputFile>${project.build.outputDirectory}/${project.artifactId}.js</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- unpack kotlin.js to target/classes/lib for example index.html -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>extract-kotlinjs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>kotlin-stdlib-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js</excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-kotlinx-html-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>kotlinx-html-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js</excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-docs</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/../${github.pages.directory}/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/classes</directory>
                                    <includes>
										<include>index.html</include>
                                        <include>menno-web.js</include>
										<include>lib/**/*</include>
                                        <include>**/*.css</include>
									</includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
						<id>CNAME</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
                            <target>
                                <echo message="Create CNAME" />
                                <echo file="${basedir}/../${github.pages.directory}/CNAME"><![CDATA[${github.pages.cname}]]></echo>
                            </target>
						</configuration>
					</execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
